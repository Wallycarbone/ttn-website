// build.js - Custom build script for Render deployment
const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('Starting custom build process for Render...');

// Create dist directory if it doesn't exist
if (!fs.existsSync('dist')) {
  fs.mkdirSync('dist', { recursive: true });
}

// Build the client-side application
console.log('Building client-side application with Vite...');
try {
  execSync('npx vite build', { stdio: 'inherit' });
  console.log('✅ Client build successful');
} catch (error) {
  console.error('❌ Client build failed:', error);
  process.exit(1);
}

// Build the server-side application
console.log('Building server-side application with esbuild...');
try {
  // Create server directory in dist if it doesn't exist
  if (!fs.existsSync('dist/server')) {
    fs.mkdirSync('dist/server', { recursive: true });
  }
  
  // Build the server code using esbuild directly with correct parameters
  execSync('npx esbuild server/index.ts --platform=node --packages=external --bundle --outdir=dist/server', { 
    stdio: 'inherit' 
  });
  console.log('✅ Server build successful');
} catch (error) {
  console.error('❌ Server build failed:', error);
  process.exit(1);
}

// Create a simple index.js in the dist directory that imports the server
fs.writeFileSync('dist/index.js', `
// This file is auto-generated by build.js
// It imports the server from the server directory
import './server/index.js';
`);

console.log('✅ Build process complete');
console.log('Please use the following settings in Render:');
console.log('Build Command: npm install && node build.js');
console.log('Start Command: node dist/index.js');